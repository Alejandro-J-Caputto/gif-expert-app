{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setcategorias","useState","inputValue","setinputValue","onSubmit","e","console","log","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","key","getGifs","categorie","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","gif","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"uLAOaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAsB9C,OAEI,0BAAMC,SAnBW,SAACC,GAClBC,QAAQC,IAAI,gBACZF,EAAEG,iBAEEN,EAAWO,OAAOC,OAAS,IAE3BV,GAAc,SAAAW,GAAI,OACbT,GADa,mBACES,OAEpBR,EAAc,OAYd,2BACIS,KAAK,OACLC,MAAOX,EACPY,SA1Bc,SAACT,GAAD,OAAOF,EAAcE,EAAEU,OAAOF,YCP/CG,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,uBAAGK,IAAKN,GAAKC,K,uBCPZM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbP,EADa,iDACmCQ,UAAUF,GAD7C,+DAEAG,MAAMT,GAFN,cAEbU,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAKe,EAAIC,OAAOC,iBAAiBjB,QARtB,kBAYZa,GAZY,4CAAH,sDCMPK,EAAU,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,UAAgB,ECFd,SAACA,GAAe,IAAD,EAEbxB,mBAAS,CAE/B8B,KAAM,GACNO,SAAS,IAL0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAwBvC,OAfAC,qBAAU,WACNjB,EAAQC,GAAWiB,MAAK,SAAAR,GAAG,OAEvBS,YAAW,WAEPH,EAAS,CACLT,KAAMG,EACNI,SAAS,MAGd,UACR,CAACb,IAIGc,EDP2BK,CAAanB,GAAjCU,EAfwB,EAe9BJ,KAAcO,EAfgB,EAehBA,QAGtB,OACI,oCACI,wBAAIlB,UAAU,qCAAqCK,GAClDa,GAAW,sCAGR,yBAAKlB,UAAU,+CAEVe,EAAOF,KAAI,SAAAY,GACR,OAAO,kBAAC,EAAD,eACHtB,IAAKsB,EAAI5B,IACL4B,UE5BnBC,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,cAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAW9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEQ+C,EAAWd,KAAI,SAACR,GACZ,OAAO,kBAAC,EAAD,CAASF,IAAKE,EAAWA,UAAWA,U,MCvBnEuB,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e7b02c9e.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\n\n\nexport const AddCategory = ({ setcategorias }) => {\n\n    const [inputValue, setinputValue] = useState(\"\")\n    const handleInputChange = (e) => setinputValue(e.target.value);\n\n    const handleSubmit = (e) => {\n        console.log('submit Hecho')\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setcategorias(cats =>\n                [inputValue, ...cats]\n            )\n            setinputValue(\"\")\n        }\n\n\n\n\n    };\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n\n    )\n}\n\nAddCategory.propTypes = {\n    setcategorias: PropTypes.func.isRequired,\n\n}\n","import React from 'react'\n\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p key={id}>{title}</p>\n        </div>\n    )\n}\n","\nexport const getGifs = async (categorie) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categorie)}&limit=10&api_key=goqwrx305mrNlGQl6xNyApt7LDSQM7as`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs\n}\n","\nimport React from 'react'\nimport { GifGridItem } from './GifGridItem'\n// import { getGifs } from '../helpers/getGifs'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\n\nexport const GifGrid = ({ categorie }) => {\n\n\n\n    // const [images, setImages] = useState([])\n\n    // useEffect(() => {\n    //     getGifs(categorie).then(gifs => {\n    //         setImages(gifs)\n    //     })\n    // }, [category])\n\n\n    //APLICANDO HOOK\n\n    const { data: images, loading } = useFetchGifs(categorie)\n\n    /////////////\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\">{categorie}</h3>\n            {loading && <p>Loading</p>}\n\n            {\n                <div className=\"card-grid animate__animated animate__fadeIn\">\n\n                    {images.map(gif => {\n                        return <GifGridItem\n                            key={gif.id}\n                            {...gif}\n\n                        />\n\n                    })}\n\n\n                </div>\n            }\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\n\n\nexport const useFetchGifs = (categorie) => {\n\n    const [state, setState] = useState({\n\n        data: [],\n        loading: true\n\n    })\n\n    useEffect(() => {\n        getGifs(categorie).then(img =>\n\n            setTimeout(() => {\n\n                setState({\n                    data: img,\n                    loading: false\n                });\n\n            }, 3000))\n    }, [categorie])\n\n\n\n    return state; //data [], loading true.\n\n\n}","\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categorias, setcategorias] = useState(['One Punch'])\n    // const handleAdd = () => {\n    //     // setcategorias([...categorias, 'Naruto'])\n    //     setcategorias(cat =>\n    //         [...categorias, 'Bleach']\n    //     )\n    // };\n\n\n    return (\n        <>\n            <h1>GifExpertApp</h1>\n            <AddCategory setcategorias={setcategorias} />\n            <hr />\n\n            {/* <button onClick={handleAdd} > agregar </button> */}\n            <ol>\n                {\n                    categorias.map((categorie) => {\n                        return <GifGrid key={categorie} categorie={categorie} />\n                    })\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp'\nimport './index.css'\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n\n);\n\n\n\n"],"sourceRoot":""}